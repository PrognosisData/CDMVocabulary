% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outputDdl.R
\name{outputCreateTables}
\alias{outputCreateTables}
\alias{outputCreatePrimaryKeys}
\alias{outputCreateForeignKeys}
\alias{outputCreateIndexes}
\alias{outputDropTables}
\alias{outputDropPrimaryKeys}
\alias{outputDropForeignKeys}
\alias{outputDropIndexes}
\alias{outputTruncateVocab}
\alias{outputDdl}
\title{outputDdl DDL script}
\usage{
outputCreateTables(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputCreatePrimaryKeys(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputCreateForeignKeys(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputCreateIndexes(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputDropTables(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputDropPrimaryKeys(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputDropForeignKeys(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputDropIndexes(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputTruncateVocab(
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema = "@cdmDatabaseSchema"
)

outputDdl(
  sql,
  filename,
  targetDialect,
  cdmVersion,
  outputfolder,
  cdmDatabaseSchema
)
}
\arguments{
\item{targetDialect}{The dialect of the target database. Choices are "oracle", "postgresql", "pdw", "redshift", "impala", "netezza", "bigquery", "sql server"}

\item{cdmVersion}{The version of the CDM you are creating, e.g. 5.3, 5.4}

\item{outputfolder}{The directory or folder where the SQL file should be saved.}

\item{cdmDatabaseSchema}{The schema of the CDM instance where the DDL will be run. For example, this would be "ohdsi.dbo" when testing on sql server.
Defaults to "@cdmDatabaseSchema"}
}
\description{
Write the drop DDL to a SQL file. The SQL will be rendered (parameters replaced) and translated to the target SQL
dialect. By default the @cdmDatabaseSchema parameter is kept in the SQL file and needs to be replaced before
execution.
}
\section{Functions}{
\itemize{
\item \code{outputCreateTables}: outputCreateTables Write the SQL code that drops the primary keys to a file.

\item \code{outputCreatePrimaryKeys}: outputCreatePrimaryKeys Write the SQL code that drops the primary keys to a file.

\item \code{outputCreateForeignKeys}: outputCreatetForeignKeys Write the SQL code that drops the primary keys to a file.

\item \code{outputCreateIndexes}: outputCreateIndexes Write the SQL code that creates indexes to a file.

\item \code{outputDropTables}: outputDropPrimaryKeys Write the SQL code that drops the primary keys to a file.

\item \code{outputDropPrimaryKeys}: outputDropPrimaryKeys Write the SQL code that drops the primary keys to a file.

\item \code{outputDropForeignKeys}: outputDropForeignKeys Write the SQL code that drops the foreign keys to a file.

\item \code{outputDropIndexes}: outputDropIndices Write SQL code that drops the indexes to a file.

\item \code{outputTruncateVocab}: outputTruncateVocab Write SQL code that truncates the vocabulary tables to a file.

\item \code{outputDdl}: outputDdl Write SQL code that drops the indexes to a file.
}}

